<?php

namespace TG\ClientBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ContactRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactRepository extends EntityRepository
{
	public function getContactduclient($client)
	{
		$qb = $this->createQueryBuilder('c');
	
		$qb
			->where('c.client = :client')
			->andwhere('c.defaut = :defaut')
			->setParameter('client', $client)
			->setParameter ('defaut', false);

		return $qb->getQuery()->getResult();
	}

		public function getContactdefaut($client)
	{
		$qb = $this->createQueryBuilder('c');
	
		$qb
			->where('c.client = :client')
			->andwhere('c.defaut = :defaut')
			->setParameter('client', $client)
			->setParameter ('defaut', true);

		return $qb->getQuery()->getResult();
	}

		public function setDefauttrue($client, $contact)
		{
			$qb = $this->createQueryBuilder('c');

			$qb
				->where('c.client = :client')
				->andwhere('c != :contact')
				->andwhere('c.defaut = :defaut')
				->setParameter('client', $client)
				->setParameter('defaut', true)
				->setParameter('contact', $contact);

			return $qb->getQuery()->getResult();
		}

		public function setcontactsbyclient($id)
		{
			$qb = $this->createQueryBuilder('c');

			$qb
				->where('c.client = :id')
				->setParameter('id', $id);

			return $qb->getQuery()->getResult();
		}

		public function contactIndex($sort, $direction)
		{
			$qb = $this->createQueryBuilder('c');

			$qb
				->orderBy($sort, $direction);

			return $qb->getQuery()->getResult();
		}
}
